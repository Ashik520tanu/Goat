module.exports.config = {
 name: "antiout",
  eventType: ["log:unsubscribe"],
   version: "0.0.1",
    credits: "ЁЭРВЁЭРШЁЭРБЁЭРДЁЭРС тШвя╕П_ЁЦгШ -ЁЭРБЁЭРОЁЭРУ тЪая╕П ЁЭС╗ЁЭСмЁЭСиЁЭС┤_ тШвя╕П",
     description: "Listen events"
     };
module.exports.run = async({ event, api, Threads, Users }) => {
 let data = (await Threads.getData(event.threadID)).data || {};
  if (data.antiout == false) return;
   if (event.logMessageData.leftParticipantFbId == api.getCurrentUserID()) return;
    const name = global.data.userName.get(event.logMessageData.leftParticipantFbId) || await Users.getNameUser(event.logMessageData.leftParticipantFbId);
     const type = (event.author == event.logMessageData.leftParticipantFbId) ? "self-separation" : "Koi Ase Pichware Mai Lath Marta Hai?";
      if (type == "self-separation") {
        api.addUserToGroup(event.logMessageData.leftParticipantFbId, event.threadID, (error, info) => {
           if (error) {
               api.sendMessage(`ржПржЗ ржирж▓рж╛ ржПржЗ ржЧрзНрж░рзБржкрзЗ ржерж╛ржХрж╛рж░ ржпрзЛржЧрзНржп ржирж╛ \nрждрж╛ржЗ ${name} ржПржЗ ржЪрзБржжрж┐рж░ ржнрж╛ржЗ рж░рзЗ ржПржб ржХрж░рж▓рж╛ржо ржирж╛ \n\n тФАтФАтФАтФАтФАтФА┬╖┬╖┬╖┬╖┬╖тЬж┬╖┬╖┬╖┬╖┬╖тФАтФАтФАтФА \n ЁЭРвЁЭРн'ЁЭР│ ЁЭРГЁЭРЮЁЭРпЁЭРвЁЭРе ЁЭРЫЁЭРиЁЭРн|с╡Г╦в╩░тБ▒с╡П `, event.threadID)
                  } else api.sendMessage(`рж╢рзЛржи, ${name} ржЖржмрж╛рж▓ ржПржЗ ржЧрзНрж░рзБржк рж╣ржЗрж▓рзЛ ржЧрзНржпрж╛ржВ! \n ржПржЦрж╛ржи ржерзЗржХрзЗ ржпрж╛ржЗрждрзЗ рж╣ржЗрж▓рзЗ ржПржбржорж┐ржирзЗрж░ ржХрзНрж▓рж┐ржпрж╝рж╛рж░рзЗржирзНрж╕ рж▓рж╛ржЧрзЗ! \nрждрзБржЗ ржкрж╛рж░ржорж┐рж╢ржи ржЫрж╛ржбрж╝рж╛ рж▓рж┐ржн ржирж┐ржЫрзЛрж╕ тАУ рждрзЛржХрзЗ ржЖржмрж╛рж░ ржорж╛ржлрж┐ржпрж╝рж╛ рж╕рзНржЯрж╛ржЗрж▓рзЗ ржПржб ржжрж┐рж▓рж╛ржоред \n\n тФАтФА ┬╖┬╖┬╖┬╖┬╖┬╖┬╖тЬж┬╖┬╖┬╖┬╖┬╖┬╖┬╖тФАтФАтФАтФА \n ЁЭРвЁЭРн'ЁЭР│ ЁЭРГЁЭРЮЁЭРпЁЭРвЁЭРе ЁЭРЫЁЭРиЁЭРн|с╡Г╦в╩░тБ▒с╡П `, event.threadID);
                    })
                     }
                     }
                     
