const axios = require("axios");
const ytdl = require("@neoxr/ytdl-core");
const fs = require("fs-extra");
const path = require("path");

module.exports.config = {
  name: "sing",
  version: "1.1.0",
  hasPermssion: 0,
  credits: "ashik",
  description: "Play a song by name",
  commandCategory: "media",
  usages: "/sing [song name]",
  cooldowns: 5,
};

module.exports.run = async function ({ api, event, args }) {
  const song = args.join(" ");
  if (!song) return api.sendMessage("üéµ ‡¶ó‡¶æ‡¶®‡¶ü‡¶ø‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®‡•§\n‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: /sing valo achi", event.threadID);

  try {
    const msg = await api.sendMessage("üîç ‡¶ó‡¶æ‡¶® ‡¶ñ‡ßã‡¶Å‡¶ú‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá, ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®...", event.threadID);

    const { data } = await axios.get(`https://api.safone.dev/api/youtube/search?q=${encodeURIComponent(song)}`);
    const videos = data?.data?.slice(0, 6);
    if (!videos || videos.length === 0) return api.sendMessage("‚ùå ‡¶ï‡ßã‡¶®‡ßã ‡¶ó‡¶æ‡¶® ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§", event.threadID, event.messageID);

    let list = "";
    const attachments = [];
    const selectionMap = {};

    videos.forEach((vid, i) => {
      list += `${i + 1}. ${vid.title}\nüì∫ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤: ${vid.channel}\nüïí ‡¶∏‡¶Æ‡ßü: ${vid.duration}\n\n`;
      attachments.push({
        type: "photo",
        url: vid.thumbnail,
      });
      selectionMap[i + 1] = vid.url;
    });

    api.sendMessage(
      {
        body: `üé∂ ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶•‡ßá‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ó‡¶æ‡¶® ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®:\n\n${list}‚úèÔ∏è ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶ï‡¶∞‡ßá 1-6 ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶¶‡¶ø‡¶®`,
        attachment: [],
      },
      event.threadID,
      (err, info) => {
        global.client.handleReply.push({
          name: this.config.name,
          messageID: info.messageID,
          author: event.senderID,
          selectionMap,
        });
      }
    );
  } catch (e) {
    console.error(e);
    api.sendMessage("‚ö†Ô∏è ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶ó‡¶æ‡¶® ‡¶ñ‡ßã‡¶Å‡¶ú‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü‡•§ ‡¶™‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§", event.threadID);
  }
};

module.exports.handleReply = async function ({ api, event, handleReply }) {
  if (parseInt(event.body) < 1 || parseInt(event.body) > 6)
    return api.sendMessage("‚ùå ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá 1 ‡¶•‡ßá‡¶ï‡ßá 6 ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶¶‡¶ø‡¶®‡•§", event.threadID, event.messageID);

  const url = handleReply.selectionMap[parseInt(event.body)];
  const msg = await api.sendMessage("üéß ‡¶ó‡¶æ‡¶® ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá, ‡¶è‡¶ï‡¶ü‡ßÅ ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®...", event.threadID);

  try {
    const filePath = path.join(__dirname, `sing_${event.senderID}.mp3`);
    const stream = await ytdl(url, {
      filter: "audioonly",
      quality: "highestaudio",
    });

    const writeStream = fs.createWriteStream(filePath);
    stream.pipe(writeStream);
    writeStream.on("finish", () => {
      api.unsendMessage(msg.messageID);
      api.sendMessage(
        {
          body: "‚úÖ ‡¶®‡¶ø‡¶ö‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ó‡¶æ‡¶® üéµ",
          attachment: fs.createReadStream(filePath),
        },
        event.threadID,
        () => fs.unlinkSync(filePath)
      );
    });
  } catch (err) {
    console.error(err);
    api.sendMessage("‚ùå ‡¶ó‡¶æ‡¶® ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§", event.threadID);
  }
};
