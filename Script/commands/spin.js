const fs = require("fs");
const path = __dirname + "/cache/spin.json";

if (!fs.existsSync(path)) fs.writeFileSync(path, "{}");

module.exports.config = {
  name: "spin",
  version: "1.0.0",
  hasPermission: 0,
  credits: "ChatGPT",
  description: "ржкржпрж╝рзЗржирзНржЯ ржжрж┐ржпрж╝рзЗ рж╕рзНржкрж┐ржи ржХрж░рзБржи",
  commandCategory: "game",
  usages: "[amount]",
  cooldowns: 3
};

module.exports.run = async ({ api, event, args }) => {
  const userID = event.senderID;
  const spinData = JSON.parse(fs.readFileSync(path));
  let points = spinData[userID] || 20000;

  // ржпржжрж┐ /spintk рж╣рзЯ
  if (args.length === 0) {
    return api.sendMessage(`ЁЯТ░ ржЖржкржирж╛рж░ ржорзЛржЯ ржкржпрж╝рзЗржирзНржЯ: ${points}`, event.threadID, event.messageID);
  }

  const bet = parseInt(args[0]);
  if (isNaN(bet) || bet <= 0) {
    return api.sendMessage("тЭМ ржжржпрж╝рж╛ ржХрж░рзЗ ржПржХржЯрж┐ рж╕ржарж┐ржХ ржкрж░рж┐ржорж╛ржг ржжрж┐ржиред ржпрзЗржоржи: /spin 500", event.threadID, event.messageID);
  }

  if (points <= 0) {
    points = 20000;
  }

  if (bet > points) {
    return api.sendMessage(`тЭМ ржЖржкржирж╛рж░ ржХрж╛ржЫрзЗ ${points} ржкржпрж╝рзЗржирзНржЯ ржЖржЫрзЗ, ржХрж┐ржирзНрждрзБ ржЖржкржирж┐ ${bet} ржжрж┐рждрзЗ ржЪрж╛ржЪрзНржЫрзЗржиред`, event.threadID, event.messageID);
  }

  const win = Math.random() < 0.5;
  if (win) {
    points += bet;
    msg = `ЁЯОЙ ржЖржкржирж┐ ржЬрж┐рждрзЗржЫрзЗржи!\nтЮХ ржкрзЗржпрж╝рзЗржЫрзЗржи: ${bet} ржкржпрж╝рзЗржирзНржЯ\nЁЯТ░ ржорзЛржЯ ржкржпрж╝рзЗржирзНржЯ: ${points}`;
  } else {
    points -= bet;
    msg = `ЁЯШв ржЖржкржирж┐ рж╣рзЗрж░рзЗржЫрзЗржи!\nтЮЦ ржХрж╛ржЯрж╛ ржЧрзЗржЫрзЗ: ${bet} ржкржпрж╝рзЗржирзНржЯ\nЁЯТ░ ржорзЛржЯ ржкржпрж╝рзЗржирзНржЯ: ${points <= 0 ? 20000 : points}`;
  }

  // ржкржпрж╝рзЗржирзНржЯ рзж рж╣рж▓рзЗ ржЖржмрж╛рж░ рзирзжрзжрзжрзж ржжрж┐рзЯрзЗ рж╢рзБрж░рзБ
  spinData[userID] = points <= 0 ? 20000 : points;
  fs.writeFileSync(path, JSON.stringify(spinData, null, 2));

  return api.sendMessage(msg, event.threadID, event.messageID);
};
