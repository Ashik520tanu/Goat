const axios = require("axios");
const fs = require("fs-extra");

module.exports.config = {
  name: "make",
  version: "1.0",
  hasPermssion: 0,
  credits: "ashuu dont chng credit",
  description: "Generate AI image from prompt (Anime & Realistic type)",
  commandCategory: "image",
  usages: "[prompt]",
  cooldowns: 5,
  dependencies: {
    "axios": "",
    "fs-extra": ""
  }
};

module.exports.onStart = async function({ api, event, args }) {
  const prompt = args.join(" ");
  if (!prompt) return api.sendMessage("‚ùå ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶Æ‡ßç‡¶™‡¶ü ‡¶¶‡¶ø‡¶®! ‡¶Ø‡ßá‡¶Æ‡¶®: /make anime girl", event.threadID, event.messageID);

  const uid = event.senderID;
  const type = Math.random() > 0.5 ? "anime" : "realistic";

  const loadingMsg = await api.sendMessage(`üß† "${prompt}" ‡¶•‡ßá‡¶ï‡ßá ${type.toUpperCase()} ‡¶õ‡¶¨‡¶ø ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã ‡¶π‡¶ö‡ßç‡¶õ‡ßá... ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®...`, event.threadID);

  try {
    const res = await axios.post("https://backend.craiyon.com/generate", { prompt: `${prompt} ${type} style` });

    if (!res.data || !res.data.images || res.data.images.length == 0) {
      return api.sendMessage("‚ùå ‡¶õ‡¶¨‡¶ø ‡¶ú‡ßá‡¶®‡¶æ‡¶∞‡ßá‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶≤‡¶æ‡¶Æ ‡¶®‡¶æ‡•§ ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§", event.threadID, event.messageID);
    }

    const base64Image = res.data.images[0];
    const imageBuffer = Buffer.from(base64Image, "base64");
    const path = __dirname + `/cache/${uid}_make.png`;
    fs.writeFileSync(path, imageBuffer);

    api.unsendMessage(loadingMsg.messageID);
    api.sendMessage(
      {
        body: `‚úÖ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ "${prompt}" ‡¶™‡ßç‡¶∞‡¶Æ‡ßç‡¶™‡¶ü ‡¶•‡ßá‡¶ï‡ßá ${type.toUpperCase()} ‡¶∏‡ßç‡¶ü‡¶æ‡¶á‡¶≤ ‡¶õ‡¶¨‡¶ø ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§`,
        attachment: fs.createReadStream(path)
      },
      event.threadID,
      () => fs.unlinkSync(path),
      event.messageID
    );
  } catch (error) {
    api.unsendMessage(loadingMsg.messageID);
    api.sendMessage(`‚ùå ‡¶õ‡¶¨‡¶ø ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá:\n${error.message}`, event.threadID, event.messageID);
  }
};
