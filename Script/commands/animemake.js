const axios = require("axios");
const fs = require("fs");
const path = require("path");

module.exports.config = {
    name: "animemake",
    version: "1.0.0",
    hasPermssion: 0,
    credits: "ashik",
    description: "‡¶õ‡¶¨‡¶ø ‡¶ï‡ßá anime style-‡¶è ‡¶ï‡¶®‡¶≠‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶¨‡ßá",
    commandCategory: "image",
    usages: "/animemake [reply ‡¶ï‡¶∞‡ßá ‡¶õ‡¶¨‡¶ø ‡¶™‡¶æ‡¶†‡¶æ‡¶ì]",
    cooldowns: 5
};

module.exports.run = async function ({ api, event, args }) {
    const { threadID, messageID, type, messageReply } = event;

    if (type !== "message_reply" || !messageReply.attachments || messageReply.attachments.length === 0) {
        return api.sendMessage("‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá `/animemake` ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶õ‡¶¨‡¶ø‡¶§‡ßá reply ‡¶ï‡¶∞‡ßÅ‡¶®‡•§", threadID, messageID);
    }

    const imgURL = messageReply.attachments[0].url;

    api.sendMessage("üé® ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶õ‡¶¨‡¶ø Anime style-‡¶è ‡¶ï‡¶®‡¶≠‡¶æ‡¶∞‡ßç‡¶ü ‡¶π‡¶ö‡ßç‡¶õ‡ßá, ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®...", threadID, messageID);

    try {
        // ‡¶´‡ßç‡¶∞‡¶ø anime style API
        const apiURL = `https://api.itsrose.rest/animefy?url=${encodeURIComponent(imgURL)}`;

        const response = await axios.get(apiURL, {
            responseType: "arraybuffer"
        });

        const imgPath = path.join(__dirname, `/cache/anime_${Date.now()}.jpg`);
        fs.writeFileSync(imgPath, Buffer.from(response.data, "binary"));

        api.sendMessage(
            {
                body: "‚ú® ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ Anime Style ‡¶õ‡¶¨‡¶ø ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§!",
                attachment: fs.createReadStream(imgPath)
            },
            threadID,
            () => fs.unlinkSync(imgPath)
        );

    } catch (error) {
        console.error(error);
        api.sendMessage("‚ùå ‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, Anime Style ‡¶õ‡¶¨‡¶ø‡¶§‡ßá ‡¶ï‡¶®‡¶≠‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§ ‡¶™‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§", threadID, messageID);
    }
};
