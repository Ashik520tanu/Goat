const fs = require("fs");
const path = require("path");
const axios = require("axios");

module.exports.config = {
 name: "bbn",
 version: "1.0.3",
 hasPermssion: 2,
 credits: "Shaon Ahmed",
 description: "ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржб ржХрж░рждрзЗ Dustbin API ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
 commandCategory: "utility",
 usages: "[ржлрж╛ржЗрж▓ржирзЗржо]",
 cooldowns: 15
};

module.exports.run = async function({ api, event, args }) {
 if (!args[0]) {
 return api.sendMessage("ЁЯУБ ржлрж╛ржЗрж▓ржирзЗрж░ ржирж╛ржо рж▓рж┐ржЦрзБржи, ржЙржжрж╛рж╣рж░ржг: bin test", event.threadID, event.messageID);
 }

 const fileName = args[0];
 const cmdPath = path.join(__dirname, "..", "commands");
 const possiblePaths = [
 path.join(cmdPath, fileName),
 path.join(cmdPath, `${fileName}.js`)
 ];

 const filePath = possiblePaths.find(fs.existsSync);

 if (!filePath) {
 return api.sendMessage("тЭМ ржлрж╛ржЗрж▓ ржЦрзБржБржЬрзЗ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐!", event.threadID, event.messageID);
 }

 try {
 const fileContent = fs.readFileSync(filePath, "utf8");
 const uploadMsg = await api.sendMessage("ЁЯУд ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржб рж╣ржЪрзНржЫрзЗ...", event.threadID);

 try {
 // Dustbin API-рждрзЗ рж░рж┐ржХрзЛрзЯрзЗрж╕рзНржЯ ржкрж╛ржарж╛ржирзЛ
 const response = await axios.post("http://141.11.167.247:6329/api/v1/pastes", {
 content: fileContent,
 syntax: "javascript",
 expire: "1h" // 1 ржШржгрзНржЯрж╛рж░ ржЬржирзНржп рж╕рзНржЯрзЛрж░ ржХрж░ржмрзЗ
 }, {
 headers: { 
 "Content-Type": "application/json",
 "Authorization": "Bearer YOUR_API_KEY" // ржпржжрж┐ ржкрзНрж░рзЯрзЛржЬржи рж╣рзЯ
 },
 timeout: 10000
 });

 await api.unsendMessage(uploadMsg.messageID);

 if (response.data && response.data.raw_url) {
 return api.sendMessage(`тЬЕ рж╕ржлрж▓ржнрж╛ржмрзЗ ржЖржкрж▓рзЛржб рж╣рзЯрзЗржЫрзЗ!\nЁЯУЭ Raw ржлрж╛ржЗрж▓: ${response.data.raw_url}`, event.threadID);
 } else if (response.data && response.data.url) {
 return api.sendMessage(`тЬЕ рж╕ржлрж▓ржнрж╛ржмрзЗ ржЖржкрж▓рзЛржб рж╣рзЯрзЗржЫрзЗ!\nЁЯФЧ рж▓рж┐ржВржХ: ${response.data.url}`, event.threadID);
 }
 throw new Error("API рж░рзЗрж╕ржкржирзНрж╕рзЗ URL ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐");
 
 } catch (apiError) {
 console.error("Dustbin API error:", apiError);
 await api.unsendMessage(uploadMsg.messageID);
 throw new Error(`ржбрж╛рж╕рзНржЯржмрж┐ржи API рждрзНрж░рзБржЯрж┐: ${apiError.message}`);
 }
 
 } catch (error) {
 console.error("Overall error:", error);
 return api.sendMessage(`тЭМ рждрзНрж░рзБржЯрж┐: ${error.message}`, event.threadID, event.messageID);
 }
};
